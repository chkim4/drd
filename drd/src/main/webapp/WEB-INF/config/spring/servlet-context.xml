<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/sbadmin/css/**" location="/resources/static/sbadmin/css/" />
	<resources mapping="/sbadmin/img/**" location="/resources/static/sbadmin/img/" />
	<resources mapping="/sbadmin/js/**" location="/resources/static/sbadmin/js/" />
	<resources mapping="/sbadmin/scss/**" location="/resources/static/sbadmin/scss/" />
	<resources mapping="/sbadmin/vendor/**" location="/resources/static/sbadmin/vendor/" />
	<resources mapping="/sbadmin/favicon.ico/**" location="/resources/static/sbadmin/favicon.ico" />
	
	<resources mapping="/sweetalert/**" location="/resources/static/sweetalert/dist/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.multi.drd" />  
	
	<!--mybatis연결 -->
	<!-- DataSource방식 : WAS에 등록된 커넥션풀을 이용해서 작업하는 방식  -->
	<beans:bean id="ds" class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="jdbc/myspring"/>
		<beans:property name="resourceRef" value="true"/>
	</beans:bean>
	
	<!-- spring과 mybatis연결클래스(mybatis에서 오라클을 연결)  -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="ds"/>
		<beans:property name="configLocation" value="/WEB-INF/config/mybatis/mybatis-config.xml"/>
	</beans:bean> 
	
	<!-- mybatis의 핵심클래스(sql을 실행하기  위한 메소드를 제공 )-->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory"/>
	</beans:bean> 
	
	<mongo:mongo id = "mongoId" host="localhost" port="27017"></mongo:mongo>
	<beans:bean id="mongoTemplate" 
		class="org.springframework.data.mongodb.core.MongoTemplate"> 
		<beans:constructor-arg ref = "mongoId"/> 
		<beans:constructor-arg name = "databaseName" value="drd"/>
	</beans:bean>
		
	<mongo:repositories base-package="com.multi.drd"/>
</beans:beans>
